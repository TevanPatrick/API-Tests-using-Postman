{
	"info": {
		"_postman_id": "15075c92-0d98-470f-9acb-945cd79429e5",
		"name": "Restful-Booker Herohuapp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Add token value to collection variables \r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"token\", jsonData.access_token);\r",
							"\r",
							"// Assertions \r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes Token value\",() => {\r",
							"  pm.expect(pm.response.text()).to.contains(\"token\");\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Bookings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assign response body to variable \r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"// Assertions \r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes Booking IDs\",() => {\r",
							"  pm.expect(pm.response.text()).to.contains(\"bookingid\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response Booking IDs is not null\",() => {\r",
							"  pm.expect(jsonData.bookingid).to.not.eq(null);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Booking IDs is not equal to 0\",() => {\r",
							"  pm.expect(jsonData.bookingid).to.not.eq(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Booking IDs is not equal to negative 0\",() => {\r",
							"  pm.expect(jsonData.bookingid).to.not.eq(-0);\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Datatypes matches\", function () {\r",
							"    pm.expect(jsonData.bookingid).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assign response body to variable \r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"// Assertions \r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes 'Firstname' details\",() => {\r",
							"  pm.expect(pm.response.text()).to.contains(\"firstname\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes 'Lastname' details\",() => {\r",
							"  pm.expect(pm.response.text()).to.contains(\"lastname\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes 'TotalPrice' details\",() => {\r",
							"  pm.expect(pm.response.text()).to.contains(\"totalprice\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes 'DepositPaid' details\",() => {\r",
							"  pm.expect(pm.response.text()).to.contains(\"depositpaid\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes 'CheckIN' BookingDates details\",() => {\r",
							"  pm.expect(pm.response.text()).to.contains(\"checkin\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes 'CheckOut' details\",() => {\r",
							"  pm.expect(pm.response.text()).to.contains(\"checkout\");\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Datatypes matches\", function () {\r",
							"    pm.expect(jsonData.firstname).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.lastname).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.totalprice).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.depositpaid).to.be.a(\"boolean\");\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{id}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assign response body to variable for validations  \r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"// Assertions \r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'firstname' input\",() => {\r",
							"   pm.expect(jsonData.booking.firstname).to.eql('Jim');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'lastname' input\",() => {\r",
							"   pm.expect(jsonData.booking.lastname).to.eql('Brown');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'totalprice' input\",() => {\r",
							"   pm.expect(jsonData.booking.totalprice).to.eql(111);\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'depositpaid' input\",() => {\r",
							"   pm.expect(jsonData.booking.depositpaid).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'checkin' input\",() => {\r",
							"   pm.expect(jsonData.booking.bookingdates.checkin).to.eql('2018-01-01');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'checkout' input\",() => {\r",
							"   pm.expect(jsonData.booking.bookingdates.checkout).to.eql('2019-01-01');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'additionalneeds' input\",() => {\r",
							"   pm.expect(jsonData.booking.additionalneeds).to.eql('{{breakfast}}');\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Datatypes matches\", function () {\r",
							"    pm.expect(jsonData.bookingid).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.booking.firstname).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.booking.lastname).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.booking.totalprice).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.booking.depositpaid).to.be.a(\"boolean\");\r",
							"    pm.expect(jsonData.booking.bookingdates.checkin).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.booking.bookingdates.checkout).to.be.a(\"string\"); \r",
							"    pm.expect(jsonData.booking.additionalneeds).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"totalprice\": {{totalprice}},\r\n    \"depositpaid\": {{depositpaid}},\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkin}}\",\r\n        \"checkout\": \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\": \"{{breakfast}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assign response body to variable for validations  \r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"// Assertions \r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'firstname' input\",() => {\r",
							"   pm.expect(jsonData.firstname).to.eql('James');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'lastname' input\",() => {\r",
							"   pm.expect(jsonData.lastname).to.eql('Brown');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'totalprice' input\",() => {\r",
							"   pm.expect(jsonData.totalprice).to.eql(111);\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'depositpaid' input\",() => {\r",
							"   pm.expect(jsonData.depositpaid).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'checkin' input\",() => {\r",
							"   pm.expect(jsonData.bookingdates.checkin).to.eql('2018-01-01');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'checkout' input\",() => {\r",
							"   pm.expect(jsonData.bookingdates.checkout).to.eql('2019-01-01');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'additionalneeds' input\",() => {\r",
							"   pm.expect(jsonData.additionalneeds).to.eql('Breakfast');\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Datatypes matches\", function () {\r",
							"    pm.expect(jsonData.firstname).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.lastname).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.totalprice).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.depositpaid).to.be.a(\"boolean\");\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.be.a(\"string\"); \r",
							"    pm.expect(jsonData.additionalneeds).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{authorization}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"James\",\r\n    \"lastname\": \"Brown\",\r\n    \"totalprice\": 111,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{id}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assign response body to variable for validations  \r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"// Assertions \r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'firstname' input\",() => {\r",
							"   pm.expect(jsonData.firstname).to.eql('Jim');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'lastname' input\",() => {\r",
							"   pm.expect(jsonData.lastname).to.eql('Brown');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'totalprice' input\",() => {\r",
							"   pm.expect(jsonData.totalprice).to.eql(111);\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'depositpaid' input\",() => {\r",
							"   pm.expect(jsonData.depositpaid).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'checkin' input\",() => {\r",
							"   pm.expect(jsonData.bookingdates.checkin).to.eql('2018-01-01');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'checkout' input\",() => {\r",
							"   pm.expect(jsonData.bookingdates.checkout).to.eql('2019-01-01');\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches 'additionalneeds' input\",() => {\r",
							"   pm.expect(jsonData.additionalneeds).to.eql('Breakfast');\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Datatypes matches\", function () {\r",
							"    pm.expect(jsonData.firstname).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.lastname).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.totalprice).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.depositpaid).to.be.a(\"boolean\");\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.be.a(\"string\"); \r",
							"    pm.expect(jsonData.additionalneeds).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "{{authorization}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"Jim\",\r\n    \"lastname\": \"Brown\",\r\n    \"totalprice\": 111,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{id}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assertions \r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes 'Created' description\",() => {\r",
							"  pm.expect(pm.response.text()).to.contains(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Content-Type is text/plain\", function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('text/plain');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{authorization}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{id}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assertions \r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes 'Created' description\",() => {\r",
							"  pm.expect(pm.response.text()).to.contains(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Schema Content-Type is text/plain\", function () {\r",
							"    pm.expect(pm.response.headers.get('content-type')).to.include('text/plain');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/ping",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "abc123"
		},
		{
			"key": "username",
			"value": "admin"
		},
		{
			"key": "password",
			"value": "password123"
		},
		{
			"key": "id",
			"value": "3"
		},
		{
			"key": "firstname",
			"value": "Jim"
		},
		{
			"key": "lastname",
			"value": "Brown"
		},
		{
			"key": "totalprice",
			"value": "111"
		},
		{
			"key": "depositpaid",
			"value": "true"
		},
		{
			"key": "checkin",
			"value": "2018-01-01"
		},
		{
			"key": "checkout",
			"value": "2019-01-01"
		},
		{
			"key": "additionalneeds",
			"value": "breakfast"
		},
		{
			"key": "cookie",
			"value": "token="
		},
		{
			"key": "authorization",
			"value": "Basic YWRtaW46cGFzc3dvcmQxMjM="
		}
	]
}